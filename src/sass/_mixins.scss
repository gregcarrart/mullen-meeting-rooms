//
// Mixins
// --------------------------------------------------

@mixin mobile {
    @media (min-width: #{$mobileWidth}) {
        @content;
    }
}

@mixin largeMobile {
    @media (min-width: #{$largeMobileWidth}) {
        @content;
    }
}

@mixin tablet {
    @media (min-width: #{$tabletWidth}) {
        @content;
    }
}

@mixin desktop {
    @media (min-width: #{$desktopWidth}) {
        @content;
    }
}

@mixin largeDesktop {
    @media (min-width: #{$largeDesktopWidth}) {
        @content;
    }
}

// https://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

@mixin rem($property, $values...) {
    $max: length($values);
    $pxValues: "";
    $remValues: "";
    @for $i from 1 through $max {
        $value: strip-unit(nth($values, $i));
        $pxValues: #{$pxValues + $value * 10}px;
        @if $i < $max {
            $pxValues: #{$pxValues + " "};
        }
    }
    @for $i from 1 through $max {
        $value: strip-unit(nth($values, $i));
        $remValues: #{$remValues + $value}rem;
        @if $i < $max {
            $remValues: #{$remValues + " "};
        }
    }
    #{$property}: $pxValues;
    #{$property}: $remValues;
}

// Placeholder text
@mixin placeholder($color: $placeholderText) {
    &:-moz-placeholder {
        color: $color;
    }
    &:-ms-input-placeholder {
        color: $color;
    }
    &::-webkit-input-placeholder {
        color: $color;
    }
}

// Hide text
@mixin hide-text($height: 1em) {
    height: $height;
    line-height: 1.5;
    overflow: hidden;
    &::before {
        content: "";
        display: block;
        width: 0;
        height: 100%;
    }
}

// Clearfix
@mixin clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Text overflow
// Requires inline-block or block for proper styling
@mixin text-overflow {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Resize anything
@mixin resizable($direction) {
    resize: $direction; // Options: horizontal, vertical, both
    overflow: auto; // Safari fix
}

@mixin line-break {
    -ms-word-break: break-all;
    word-break: break-all;
    word-break: break-word; // <== Non standard for webkit
    @include hyphens;
}

// Date Picker
%triangle-arrow {
  margin-left: -$triangle-size;
  position: absolute;

  &,
  &::before {
    box-sizing: content-box;
    position: absolute;
    border: $triangle-size solid transparent;

    height: 0;
    width: 1px;
  }

  &::before {
    content: "";
    z-index: -1;
    border-width: $triangle-size;

    left: -$triangle-size;
    border-bottom-color: $border-color;
  }
}

%triangle-arrow-up {
  @extend %triangle-arrow;

  top: 0;
  margin-top: -$triangle-size;

  &,
  &::before {
    border-top: none;
    border-bottom-color: $background-color;
  }

  &::before {
    top: -1px;
    border-bottom-color: $border-color;
  }
}

%triangle-arrow-down {
  @extend %triangle-arrow;

  bottom: 0;
  margin-bottom: -$triangle-size;

  &,
  &::before {
    border-bottom: none;
    border-top-color: #fff;
  }

  &::before {
    bottom: -1px;
    border-top-color: $border-color;
  }
}
